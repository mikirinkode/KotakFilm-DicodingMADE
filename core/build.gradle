plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.squareup.leakcanary.deobfuscation'
}

apply from: '../shared_dependencies.gradle'

leakCanary {
    // LeakCanary needs to know which variants have obfuscation turned on
    // never use this plugin on a release variant.
    // detail: https://square.github.io/leakcanary/recipes/#using-leakcanary-with-obfuscated-apps
    filterObfuscatedVariants { variant ->
        variant.name == "debug"
    }
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        buildConfigField("String", "TMDB_API_KEY", tmdb_api_key)
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
    // flow to live data
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // SQLCipher
    implementation "net.zetetic:android-database-sqlcipher:$sqlCipherVersion"
    implementation "androidx.sqlite:sqlite-ktx:$sqliteVersion"
}